{"version":3,"file":"react-native-media-controls.esm.js","sources":["../../src/MediaControls.style.ts","../../src/constants/playerStates.ts","../../src/utils.ts","../../src/Controls.tsx","../../src/Slider.tsx","../../src/Toolbar.tsx","../../src/MediaControls.tsx"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst containerBackgroundColor = \"transparent\";\nconst playButtonBorderColor = \"rgba(255,255,255,0.5)\";\nconst white = \"#fff\";\n\nexport default StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: containerBackgroundColor,\n    bottom: 0,\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    left: 0,\n    paddingHorizontal: 20,\n    paddingVertical: 13,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n  controlsRow: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  fullScreenContainer: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    justifyContent: \"center\",\n    paddingLeft: 20,\n  },\n  playButton: {\n    alignItems: \"center\",\n    borderColor: playButtonBorderColor,\n    borderRadius: 3,\n    borderWidth: 1.5,\n    height: 50,\n    justifyContent: \"center\",\n    width: 50,\n  },\n  playIcon: {\n    height: 22,\n    resizeMode: \"contain\",\n    width: 22,\n  },\n  progressColumnContainer: {\n    flex: 1,\n  },\n  progressContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginBottom: -25,\n  },\n  progressSlider: {\n    alignSelf: \"stretch\",\n  },\n  replayIcon: {\n    height: 20,\n    resizeMode: \"stretch\",\n    width: 25,\n  },\n  thumb: {\n    backgroundColor: white,\n    borderRadius: 50,\n    borderWidth: 3,\n    height: 20,\n    width: 20,\n  },\n  timeRow: {\n    alignSelf: \"stretch\",\n  },\n  timerLabel: {\n    color: white,\n    fontSize: 12,\n  },\n  timerLabelsContainer: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: -7,\n  },\n  toolbar: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  toolbarRow: {\n    alignItems: \"flex-start\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n  },\n  track: {\n    borderRadius: 1,\n    height: 5,\n  },\n});\n","enum PLAYER_STATES {\n  PLAYING = 0,\n  PAUSED = 1,\n  ENDED = 2,\n}\n\nexport { PLAYER_STATES };\n","import { PLAYER_STATES } from \"./constants/playerStates\";\n\nexport const humanizeVideoDuration = (seconds: number) => {\n  const [begin, end] = seconds >= 3600 ? [11, 8] : [14, 5];\n  const date = new Date(0);\n\n  date.setSeconds(seconds);\n  return date.toISOString().substr(begin, end);\n};\n\nexport const noop = () => {};\n\nexport const getPlayerStateIcon = (playerState: PLAYER_STATES) => {\n  switch (playerState) {\n    case PLAYER_STATES.PAUSED:\n      return require(\"./assets/ic_play.png\");\n    case PLAYER_STATES.PLAYING:\n      return require(\"./assets/ic_pause.png\");\n    case PLAYER_STATES.ENDED:\n      return require(\"./assets/ic_replay.png\");\n    default:\n      return null;\n  }\n};\n","import React from \"react\";\nimport { TouchableOpacity, View, ActivityIndicator, Image } from \"react-native\";\nimport styles from \"./MediaControls.style\";\nimport { getPlayerStateIcon } from \"./utils\";\nimport { Props } from \"./MediaControls\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\n\ntype ControlsProps = Pick<\n  Props,\n  \"isLoading\" | \"mainColor\" | \"playerState\" | \"onReplay\"\n> & {\n  onPause: () => void;\n};\n\nconst Controls = (props: ControlsProps) => {\n  const { isLoading, mainColor, playerState, onReplay, onPause } = props;\n  const icon = getPlayerStateIcon(playerState);\n  const pressAction = playerState === PLAYER_STATES.ENDED ? onReplay : onPause;\n\n  const content = isLoading ? (\n    <ActivityIndicator size=\"large\" color=\"#FFF\" />\n  ) : (\n    <TouchableOpacity\n      style={[styles.playButton, { backgroundColor: mainColor }]}\n      onPress={pressAction}\n    >\n      <Image source={icon} style={styles.playIcon} />\n    </TouchableOpacity>\n  );\n\n  return <View style={[styles.controlsRow]}>{content}</View>;\n};\n\nexport { Controls };\n","import React from \"react\";\nimport { TouchableOpacity, View, Text, Image } from \"react-native\";\nimport RNSlider from \"react-native-slider\";\nimport styles from \"./MediaControls.style\";\nimport { humanizeVideoDuration } from \"./utils\";\nimport { Props as MediaControlsProps } from \"./MediaControls\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\n\n// export type CustomSliderStyle = {\n//   // containerStyle: ViewStyle;\n//   trackStyle: ViewStyle;\n//   thumbStyle: ViewStyle;\n// };\n\ntype Props = Pick<\n  MediaControlsProps,\n  | \"progress\"\n  | \"duration\"\n  | \"mainColor\"\n  | \"onFullScreen\"\n  | \"playerState\"\n  | \"onSeek\"\n  | \"onSeeking\"\n> & {\n  onPause: () => void;\n  // customSliderStyle: CustomSliderStyle;\n};\n\nconst fullScreenImage = require(\"./assets/ic_fullscreen.png\");\n\nconst Slider = (props: Props) => {\n  const {\n    // customSliderStyle,\n    duration,\n    mainColor,\n    onFullScreen,\n    onPause,\n    progress,\n  } = props;\n\n  // const {\n  //   // containerStyle = {},\n  //   trackStyle: customTrackStyle = {},\n  //   thumbStyle: customThumbStyle = {},\n  // } = customSliderStyle;\n\n  const dragging = (value: number) => {\n    const { onSeeking, playerState } = props;\n    onSeeking(value);\n\n    if (playerState === PLAYER_STATES.PAUSED) {\n      return;\n    }\n\n    onPause();\n  };\n\n  const seekVideo = (value: number) => {\n    props.onSeek(value);\n    onPause();\n  };\n\n  return (\n    <View style={[styles.controlsRow, styles.progressContainer]}>\n      <View style={styles.progressColumnContainer}>\n        <View style={[styles.timerLabelsContainer]}>\n          <Text style={styles.timerLabel}>\n            {humanizeVideoDuration(progress)}\n          </Text>\n          <Text style={styles.timerLabel}>\n            {humanizeVideoDuration(duration)}\n          </Text>\n        </View>\n        <RNSlider\n          style={[styles.progressSlider]} // containerStyle\n          onValueChange={dragging}\n          onSlidingComplete={seekVideo}\n          maximumValue={Math.floor(duration)}\n          value={Math.floor(progress)}\n          // trackStyle={[styles.track, customTrackStyle]}\n\n          trackStyle={styles.track}\n          //  customThumbStyle,\n          thumbStyle={[styles.thumb, { borderColor: mainColor }]}\n          minimumTrackTintColor={mainColor}\n        />\n      </View>\n      {Boolean(onFullScreen) && (\n        <TouchableOpacity\n          style={styles.fullScreenContainer}\n          onPress={onFullScreen}\n        >\n          <Image source={fullScreenImage} />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nexport { Slider };\n","import React from \"react\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Toolbar = ({ children }: Props) => <>{children}</>;\n\nexport { Toolbar };\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  GestureResponderEvent,\n  ViewStyle,\n  // Alert\n} from \"react-native\";\nimport styles from \"./MediaControls.style\";\nimport { PLAYER_STATES } from \"./constants/playerStates\";\nimport { Controls } from \"./Controls\";\n// import { Slider, CustomSliderStyle } from \"./Slider\";\n\nimport { Slider } from \"./Slider\";\nimport { Toolbar } from \"./Toolbar\";\n\nexport type Props = {\n  children: React.ReactNode;\n  // containerStyle: ViewStyle;\n  duration: number;\n  fadeOutDelay?: number;\n  isFullScreen: boolean;\n  isLoading: boolean;\n  mainColor: string;\n  onFullScreen?: (event: GestureResponderEvent) => void;\n  onPaused: (playerState: PLAYER_STATES) => void;\n  onReplay: () => void;\n  onSeek: (value: number) => void;\n  onSeeking: (value: number) => void;\n  playerState: PLAYER_STATES;\n  progress: number;\n  showOnStart?: boolean;\n  // sliderStyle: CustomSliderStyle;\n  toolbarStyle: ViewStyle;\n  showSlider: boolean;\n  isControlVisible: boolean;\n};\n\nconst MediaControls = (props: Props) => {\n  const {\n    children,\n    // containerStyle: customContainerStyle = {},\n    duration,\n    // fadeOutDelay = 7000,\n    isLoading = false,\n    mainColor = \"rgba(12, 83, 175, 0.9)\",\n    onFullScreen,\n    onReplay: onReplayCallback,\n    onSeek,\n    onSeeking,\n    playerState,\n    progress,\n    showOnStart = true,\n    // sliderStyle, // defaults are applied in Slider.tsx\n    toolbarStyle: customToolbarStyle = {},\n    showSlider,\n    isControlVisible = true,\n  } = props;\n  const { initialOpacity, initialIsVisible } = (() => {\n    if (showOnStart) {\n      return {\n        initialOpacity: 1,\n        initialIsVisible: true,\n      };\n    }\n\n    return {\n      initialOpacity: 0,\n      initialIsVisible: false,\n    };\n  })();\n\n  const [opacity] = useState(new Animated.Value(initialOpacity));\n  const [isVisible, setIsVisible] = useState(initialIsVisible);\n\n  // const fadeOutControls = (delay = 0) => {\n  //   Animated.timing(opacity, {\n  //     toValue: 0,\n  //     duration: 300,\n  //     delay,\n  //     useNativeDriver: false,\n  //   }).start(result => {\n  //     /* I noticed that the callback is called twice, when it is invoked and when it completely finished\n  //     This prevents some flickering */\n  //     if (result.finished) {\n  //       setIsVisible(false);\n  //     }\n  //   });\n  // };\n\n  React.useEffect(() => {\n    if (showSlider) {\n      // fadeOutControls(fadeOutDelay);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // const fadeInControls = (loop = true) => {\n  //   setIsVisible(true);\n  //   Animated.timing(opacity, {\n  //     toValue: 1,\n  //     duration: 300,\n  //     delay: 0,\n  //     useNativeDriver: false,\n  //   }).start(() => {\n  //     if (loop) {\n  //       fadeOutControls(fadeOutDelay);\n  //     }\n  //   });\n  // };\n\n  const onReplay = () => {\n    // fadeOutControls(fadeOutDelay);\n    onReplayCallback();\n  };\n\n  const cancelAnimation = () => opacity.stopAnimation(() => setIsVisible(true));\n\n  const onPause = () => {\n    const { playerState, onPaused } = props;\n    const { PLAYING, PAUSED, ENDED } = PLAYER_STATES;\n    switch (playerState) {\n      case PLAYING: {\n        cancelAnimation();\n        break;\n      }\n      case PAUSED: {\n        // fadeOutControls(fadeOutDelay);\n        break;\n      }\n      case ENDED:\n        break;\n    }\n\n    const newPlayerState = playerState === PLAYING ? PAUSED : PLAYING;\n    return onPaused(newPlayerState);\n  };\n\n  const toggleControls = () => {\n    // Alert.alert(\"message\", \"hi\" )\n    // value is the last value of the animation when stop animation was called.\n    // As this is an opacity effect, I (Charlie) used the value (0 or 1) as a boolean\n    // opacity.stopAnimation((value: number) => {\n    //   setIsVisible(!!value);\n    //   return value ? fadeOutControls() : fadeInControls();\n    // });\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={toggleControls}>\n      <Animated.View style={[styles.container, { opacity }]}>\n        {isVisible && (\n          <View style={[styles.container]}>\n            {/* <View style={[styles.container, customContainerStyle]}> */}\n            <View\n              style={[\n                styles.controlsRow,\n                styles.toolbarRow,\n                customToolbarStyle,\n                // { borderWidth: 4 },\n              ]}\n            >\n              {children}\n            </View>\n            {isControlVisible && (\n              <Controls\n                onPause={onPause}\n                onReplay={onReplay}\n                isLoading={isLoading}\n                mainColor={mainColor}\n                playerState={playerState}\n              />\n            )}\n            {showSlider && (\n              <Slider\n                progress={progress}\n                duration={duration}\n                mainColor={mainColor}\n                onFullScreen={onFullScreen}\n                playerState={playerState}\n                onSeek={onSeek}\n                onSeeking={onSeeking}\n                onPause={onPause}\n                // customSliderStyle={sliderStyle}\n              />\n            )}\n          </View>\n        )}\n      </Animated.View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nMediaControls.Toolbar = Toolbar;\n\nexport default MediaControls;\n"],"names":["containerBackgroundColor","playButtonBorderColor","white","StyleSheet","create","container","alignItems","backgroundColor","bottom","flex","flexDirection","justifyContent","left","paddingHorizontal","paddingVertical","position","right","top","controlsRow","alignSelf","fullScreenContainer","paddingLeft","playButton","borderColor","borderRadius","borderWidth","height","width","playIcon","resizeMode","progressColumnContainer","progressContainer","marginBottom","progressSlider","replayIcon","thumb","timeRow","timerLabel","color","fontSize","timerLabelsContainer","toolbar","toolbarRow","track","PLAYER_STATES","humanizeVideoDuration","seconds","begin","end","date","Date","setSeconds","toISOString","substr","getPlayerStateIcon","playerState","PAUSED","require","PLAYING","ENDED","Controls","props","isLoading","mainColor","onReplay","onPause","icon","pressAction","content","React","ActivityIndicator","size","TouchableOpacity","style","styles","onPress","Image","source","View","fullScreenImage","Slider","duration","onFullScreen","progress","dragging","value","onSeeking","seekVideo","onSeek","Text","RNSlider","onValueChange","onSlidingComplete","maximumValue","Math","floor","trackStyle","thumbStyle","minimumTrackTintColor","Boolean","Toolbar","children","MediaControls","onReplayCallback","showOnStart","toolbarStyle","customToolbarStyle","showSlider","isControlVisible","initialOpacity","initialIsVisible","useState","Animated","Value","opacity","isVisible","setIsVisible","useEffect","cancelAnimation","stopAnimation","onPaused","newPlayerState","toggleControls","TouchableWithoutFeedback"],"mappings":"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"}